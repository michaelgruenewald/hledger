# Runs on any push to ci-linux-x64.
# Produces optimised static x64 linux  binaries,
# using the GHC version below (9.0.2) and cabal.
# Currently runs no tests.
# ghc 9.0 is used to avoid segfaults with the ghc 9.2 binaries on alpine, possibly https://gitlab.haskell.org/ghc/ghc/-/issues/20266

name: binaries-linux-x64-static

on:
  push:
    branches: [ binaries-linux-x64-static, binaries ]
    #tags:
    #  - '[0-9]+.[0-9]+'
    #  - '[0-9]+.[0-9]+-*'
    #  - '[0-9]+.[0-9]+.[0-9]+'
    #  - '[0-9]+.[0-9]+.[0-9]+-*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: alpine:edge
    steps:

    - name: Setup environment
      # Borrowed from fossas/haskell-static-alpine, copied here for transparency
      run: |
        apk --no-cache add binutils-gold curl gcc g++ git gmp-dev ncurses-dev ncurses-static libffi-dev make xz tar perl zlib-dev zlib-static
        mkdir -p ~/.ghcup/bin && curl https://downloads.haskell.org/~ghcup/x86_64-linux-ghcup > ~/.ghcup/bin/ghcup && chmod +x ~/.ghcup/bin/ghcup
        ~/.ghcup/bin/ghcup install ghc 9.0.2 && ~/.ghcup/bin/ghcup set ghc 9.0.2 && ~/.ghcup/bin/ghcup install cabal
        echo "$HOME/.ghcup/bin/" >> $GITHUB_PATH

    - name: Check out
      uses: actions/checkout@v2
      # have to fetch everything for git describe for --version
      with: 
        fetch-depth: 0  

    - name: Cache cabal packages, binaries
      id:   cabal
      uses: actions/cache@v2
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-cabal-20220711-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-cabal-20220711

    - name: Update cabal
      run: cabal update

    - name: Build on alpine
      run: |
        cabal build --enable-executable-static hledger || (echo "ERROR: building hledger failed"; false)
        cabal build --enable-executable-static hledger-ui || (echo "ERROR: building hledger failed"; false)
        cabal build --enable-executable-static hledger-web || (echo "ERROR: building hledger-web failed"; false)

    - name: Gather binaries
      run: |
        mkdir tmp
        cd tmp
        cp dist-newstyle/build/x86_64-linux/ghc-*/hledger-*/x/hledger/build/hledger/hledger .
        cp dist-newstyle/build/x86_64-linux/ghc-*/hledger-ui-*/x/hledger-ui/build/hledger-ui/hledger-ui .
        cp dist-newstyle/build/x86_64-linux/ghc-*/hledger-web-*/x/hledger-web/build/hledger-web/hledger-web .
        strip hledger
        strip hledger-ui
        strip hledger-web
        tar cvf hledger-linux-x64.tar hledger hledger-ui hledger-web

    # upload-artifact loses execute permissions, so we tar the binaries to preserve them.
    # github UI always zips artifacts when they are downloaded, so we don't bother compressing the tar.
    # Unfortunately it means users must both unzip and untar.
    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: hledger-linux-x64
        path: tmp/hledger-linux-x64.tar
